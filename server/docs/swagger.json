{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Luxora is a secure, modern backend API for managing listings, bids, and authentication with OAuth2 providers. This API powers the Luxora marketplace platform, enabling seamless user authentication, listing management, and bidding workflows.",
        "title": "Luxora Marketplace API",
        "contact": {},
        "version": "1.2.5"
    },
    "host": "api.luxoras.nl",
    "paths": {
        "/auth/github": {
            "get": {
                "description": "redirect to Github for Oauth authentication.",
                "consumes": [
                    "*/*"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Github Oauth redirect",
                "responses": {}
            }
        },
        "/auth/github/exchange": {
            "get": {
                "description": "Send a request to this endpoint to exchange the Github code you got from Github for an access token.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Github Oauth exchange",
                "parameters": [
                    {
                        "type": "string",
                        "format": "code",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "state",
                        "description": "state",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "$ref": "#/definitions/transport.AccessTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "description": "redirect to Google for Oauth authentication.",
                "consumes": [
                    "*/*"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google Oauth redirect",
                "responses": {}
            }
        },
        "/auth/google/exchange": {
            "get": {
                "description": "Send a request to this endpoint to exchange the Google code you got from Google for an access token.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google Oauth exchange",
                "parameters": [
                    {
                        "type": "string",
                        "format": "code",
                        "description": "code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "state",
                        "description": "state",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "$ref": "#/definitions/transport.AccessTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Logs out the authenticated user and invalidates their tokens",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out"
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh the access token using the refresh token stored in the cookie.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "responses": {
                    "200": {
                        "description": "Access token response",
                        "schema": {
                            "$ref": "#/definitions/transport.AccessTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Missing cookie error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/userinfo": {
            "get": {
                "description": "Retrieves the authenticated user's profile information.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get user info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile details",
                        "schema": {
                            "$ref": "#/definitions/models.UserDetails"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "get": {
                "description": "Verifies the provided access token and returns its expiry if valid.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Verify access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token to verify",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token is valid and expiry is returned",
                        "schema": {
                            "$ref": "#/definitions/middleware.ValidTokenResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized or invalid token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/listings": {
            "get": {
                "description": "Retrieves a paginated list of product listings for the authenticated user. Supports optional filtering by category and price range.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Get product listings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of listings per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number to retrieve",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category to filter listings",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Minimum price filter",
                        "name": "startprice",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "search query",
                        "name": "searchquery",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Maximum price filter",
                        "name": "endprice",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "the person who created the listing",
                        "name": "creator",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product listings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - missing or invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "This endpoint allows users to create new product listings.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Create new listing",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Product"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create listing response containing the product ID",
                        "schema": {
                            "$ref": "#/definitions/transport.CreateListingResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid JSON payload",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "This endpoint allows users to update their product listings. The request body must contain the update details in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Update a product listing",
                "parameters": [
                    {
                        "description": "Product update details",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProduct"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid JSON payload",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/bid": {
            "post": {
                "description": "This endpoint allows users to create bids on product listings. The request body must contain the bid details in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bidding"
                ],
                "summary": "Create a bid",
                "parameters": [
                    {
                        "description": "Bid details",
                        "name": "bid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bid"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bid created successfully with the bid ID",
                        "schema": {
                            "$ref": "#/definitions/models.CreateBidResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid input or missing fields",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - failed to decode JSON payload",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/bids": {
            "get": {
                "description": "Retrieves a paginated list of bids for a specific product listing. The product ID, limit, and page number must be provided as query parameters.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bidding"
                ],
                "summary": "Get bids for a product listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The unique identifier of the product listing",
                        "name": "productid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The maximum number of bids to retrieve per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The page number to retrieve",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of bids for the specified product listing",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Bid"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid or missing query parameters",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - product ID not provided",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/checkout": {
            "post": {
                "description": "Processes the checkout for the authenticated user's cart. The request body must contain the cart items in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Checkout cart",
                "parameters": [
                    {
                        "description": "Cart items to checkout",
                        "name": "cartItems",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CartItems"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checkout successful",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid JSON payload",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/highest-bid": {
            "get": {
                "description": "This endpoint retrieves the highest bid for a specific product listing. The product ID must be provided as a query parameter.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bidding"
                ],
                "summary": "Get highest bid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "productid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Highest bid details",
                        "schema": {
                            "$ref": "#/definitions/models.Bid"
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid or missing product ID",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not found - product ID not provided",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/sold/bid": {
            "put": {
                "description": "This endpoint updates the sold status of a product based on a successful bid. The request body must contain the bid details in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Update sold status via bid",
                "parameters": [
                    {
                        "description": "Details of the bid used to mark the item as sold",
                        "name": "bid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SellItemViaBid"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item marked as sold successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity - invalid JSON payload",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/listings/{id}": {
            "get": {
                "description": "Fetches listing information associated with a specific product UUID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Retrieve product listings by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of product listings",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid or missing product ID",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "This endpoint allows users to delete product listings.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "*/*"
                ],
                "tags": [
                    "listings"
                ],
                "summary": "Delete a listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listing deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product ID not found",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/error.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Endpoint to check if the server is running",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "base"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "middleware.ValidTokenResponse": {
            "type": "object",
            "properties": {
                "exp": {
                    "type": "string"
                }
            }
        },
        "models.Bid": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "mesage": {
                    "type": "string"
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "models.CartItems": {
            "type": "object",
            "properties": {
                "products": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.CreateBidResponse": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "string"
                }
            }
        },
        "models.Product": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductImage"
                    }
                }
            }
        },
        "models.ProductImage": {
            "type": "object",
            "properties": {
                "base_64_image": {
                    "type": "string"
                },
                "checksum": {
                    "type": "string"
                },
                "compressedImage": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "order": {
                    "type": "integer"
                }
            }
        },
        "models.SellItemViaBid": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "string"
                },
                "item_id": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProduct": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.UserDetails": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "profile_image_link": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "transport.AccessTokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                }
            }
        },
        "transport.CreateListingResponse": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                }
            }
        }
    }
}