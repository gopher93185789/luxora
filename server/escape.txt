go build -gcflags=-m -o luxora .

# github.com/gopher93185789/luxora/server
./cert_reload.go:49:2: can inline generateFileHash.deferwrap1
./cert_reload.go:40:2: can inline (*CertReloader).GetCertificate.deferwrap1

./cert_reload.go:62:5: can inline (*CertReloader).WatchCertificate.func1
./main.go:32:6: can inline Ping
./main.go:121:26: can inline main.func1.1.1
./main.go:120:7: can inline main.func1.1

./cert_reload.go:45:22: inlining call to os.Open
./cert_reload.go:51:22: inlining call to sha256.New
./cert_reload.go:53:22: inlining call to io.Copy
./cert_reload.go:57:19: devirtualizing hasher.Sum to *sha256.Digest
./cert_reload.go:51:22: inlining call to sha256.New
./cert_reload.go:49:18: inlining call to os.(*File).Close
./cert_reload.go:39:13: inlining call to sync.(*RWMutex).RLock
./cert_reload.go:39:13: inlining call to atomic.(*Int32).Add
./cert_reload.go:40:21: inlining call to sync.(*RWMutex).RUnlock
./cert_reload.go:40:21: inlining call to atomic.(*Int32).Add

./cert_reload.go:82:15: inlining call to log.Printf
./cert_reload.go:91:15: inlining call to log.Println
./main.go:125:34: inlining call to http.ListenAndServe
./main.go:79:25: inlining call to http.NewServeMux
./main.go:82:23: inlining call to middleware.New
./main.go:93:56: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:94:53: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:95:52: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:96:55: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:97:64: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:98:57: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:99:61: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:100:62: inlining call to middleware.(*AuthMiddleWareConfig).AuthMiddleware
./main.go:151:13: inlining call to fmt.Println
./main.go:153:55: inlining call to context.Background
./main.go:157:14: inlining call to fmt.Println
./main.go:159:14: inlining call to fmt.Println
./main.go:114:14: inlining call to log.Println

<autogenerated>:1: inlining call to reflect.flag.kind
<autogenerated>:1: inlining call to reflect.flag.kind
<autogenerated>:1: inlining call to reflect.flag.mustBe
<autogenerated>:1: inlining call to reflect.flag.kind
<autogenerated>:1: inlining call to reflect.flag.mustBe
<autogenerated>:1: inlining call to reflect.flag.kind
<autogenerated>:1: inlining call to reflect.flag.mustBeAssignable
<autogenerated>:1: inlining call to reflect.flag.mustBeAssignable
<autogenerated>:1: inlining call to reflect.flag.mustBeExported
<autogenerated>:1: inlining call to reflect.flag.mustBeExported
<autogenerated>:1: inlining call to reflect.flag.ro
<autogenerated>:1: inlining call to reflect.flag.ro
./cert_reload.go:44:23: leaking param: filePath
./cert_reload.go:51:22: new(sha256.Digest) escapes to heap
./cert_reload.go:21:22: leaking param: certPath
./cert_reload.go:21:32: leaking param: keyPath
./cert_reload.go:22:2: moved to heap: cert
./cert_reload.go:35:9: &CertReloader{...} escapes to heap
./cert_reload.go:38:7: leaking param: cr
./cert_reload.go:61:7: leaking param: cr
./cert_reload.go:61:42: leaking param: certPath
./cert_reload.go:61:52: leaking param: keyPath

./cert_reload.go:80:4: moved to heap: cert
./cert_reload.go:62:5: func literal escapes to heap
./cert_reload.go:82:15: ... argument does not escape
./cert_reload.go:82:15: func literal does not escape
./cert_reload.go:91:15: ... argument does not escape
./cert_reload.go:91:16: "TLS certificate reloaded" escapes to heap
./cert_reload.go:91:15: func literal does not escape
./config.go:30:12: &Config{} escapes to heap
./config.go:32:31: map[string]*string{...} does not escape
./config.go:47:25: []string{} escapes to heap
./config.go:55:16: ":" + val escapes to heap
./config.go:63:25: ... argument does not escape
./config.go:63:63: missingVars escapes to heap
./main.go:32:11: leaking param: w
./main.go:32:34: r does not escape
./main.go:33:17: ([]byte)("pong") escapes to heap
./main.go:121:31: leaking param: w
./main.go:121:54: leaking param content: r
./main.go:122:36: "https://" + r.Host + (*url.URL).RequestURI(r.URL) escapes to heap
./main.go:121:26: func literal escapes to heap
./main.go:125:34: &http.Server{...} escapes to heap
./main.go:126:16: ... argument does not escape
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
./pkg/middleware/auth.go:28:14: leaking param: w
./pkg/middleware/auth.go:28:37: leaking param: r
../../go/pkg/mod/golang.org/toolchain@v0.0.1-go1.24.3.darwin-arm64/src/log/log.go:405:24: leaking param: b to result ~r0 level=0
./main.go:105:2: moved to heap: srv
./main.go:45:14: ... argument does not escape
./main.go:45:35: "error in config: " + err.Error() escapes to heap
./main.go:45:35: "error in config: " + err.Error() escapes to heap
./main.go:50:14: ... argument does not escape
./main.go:50:49: "Failed to connect to database: " + err.Error() escapes to heap
./main.go:50:49: "Failed to connect to database: " + err.Error() escapes to heap
./main.go:53:36: ([]byte)(config.TokenEncryptionKey) does not escape
./main.go:53:71: ([]byte)(config.TokenSigningKey) escapes to heap
./main.go:55:8: &transport.TransportConfig{...} escapes to heap
./main.go:56:13: &auth.CoreAuthContext{...} escapes to heap
./main.go:57:18: &oauth2.Config{...} escapes to heap
./main.go:62:27: []string{...} escapes to heap
./main.go:64:18: &oauth2.Config{...} escapes to heap
./main.go:69:27: []string{...} escapes to heap
./main.go:79:25: &http.ServeMux{} escapes to heap
./main.go:82:24: &token.BstConfig{...} escapes to heap
./main.go:82:23: &middleware.AuthMiddleWareConfig{...} escapes to heap
./main.go:85:39: tx.GithubRedirect escapes to heap
./main.go:86:48: tx.GithubExchange escapes to heap
./main.go:87:39: tx.GoogleRedirect escapes to heap
./main.go:88:48: tx.GoogleExchange escapes to heap
./main.go:89:41: tx.GetUserInfo escapes to heap
./main.go:90:41: tx.RefreshToken escapes to heap
./main.go:93:59: tx.CreateBid escapes to heap
./main.go:93:56: func literal escapes to heap
./main.go:94:56: tx.CreateNewListing escapes to heap
./main.go:94:53: func literal escapes to heap
./main.go:95:55: tx.GetListings escapes to heap
./main.go:95:52: func literal escapes to heap
./main.go:96:58: tx.DeleteListing escapes to heap
./main.go:96:55: func literal escapes to heap
./main.go:97:67: tx.GetHighestBid escapes to heap
./main.go:97:64: func literal escapes to heap
./main.go:98:60: tx.GetBids escapes to heap
./main.go:98:57: func literal escapes to heap
./main.go:99:64: tx.UpdateSoldViaBid escapes to heap
./main.go:99:61: func literal escapes to heap
./main.go:100:65: tx.Checkout escapes to heap
./main.go:100:62: func literal escapes to heap
./main.go:103:15: ... argument does not escape
./main.go:103:28: syscall.Signal(2) does not escape
./main.go:103:44: syscall.Signal(15) does not escape
./main.go:113:5: func literal escapes to heap
./main.go:114:14: ... argument does not escape
./main.go:114:36: "listening on port " + config.Port escapes to heap
./main.go:114:36: "listening on port " + config.Port escapes to heap
./main.go:114:14: func literal does not escape
./main.go:117:15: ... argument does not escape
./main.go:120:7: func literal escapes to heap
./main.go:132:16: ... argument does not escape
./main.go:137:20: &tls.Config{...} escapes to heap
./main.go:140:37: []string{...} escapes to heap
./main.go:141:37: reloader.GetCertificate escapes to heap
./main.go:145:15: ... argument does not escape
./main.go:151:13: ... argument does not escape
./main.go:151:14: "shutdown signal received" escapes to heap
./main.go:153:55: context.backgroundCtx{} escapes to heap
./main.go:157:14: ... argument does not escape
./main.go:157:45: "failed to shutdown server: " + err.Error() escapes to heap
./main.go:157:45: "failed to shutdown server: " + err.Error() escapes to heap
./main.go:159:14: ... argument does not escape
./main.go:159:15: "shutdown server" escapes to heap
